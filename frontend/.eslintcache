[{"C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\index.js":"1","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\App.js":"2","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Home.js":"3","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Auth\\Login.js":"4","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Auth\\Nav.js":"5","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Auth\\Signup.js":"6","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Auth\\apiAuth.js":"7","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Skills\\SelectSkills.js":"8","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Skills\\SelectBranch.js":"9","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Skills\\apiSkills.js":"10","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Skills\\AskSkills.js":"11","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\MainPage.js":"12","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\MainNav.js":"13","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\Cards.js":"14","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\apiMain.js":"15","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\AddResource.js":"16","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\Search.js":"17","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\Resource.js":"18","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\Skills.js":"19","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\Profile.js":"20","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Chat.js":"21"},{"size":618,"mtime":1619071034271,"results":"22","hashOfConfig":"23"},{"size":1667,"mtime":1618989302650,"results":"24","hashOfConfig":"23"},{"size":771,"mtime":1618847543779,"results":"25","hashOfConfig":"23"},{"size":2471,"mtime":1618553864351,"results":"26","hashOfConfig":"23"},{"size":480,"mtime":1608877338397,"results":"27","hashOfConfig":"23"},{"size":3521,"mtime":1609477040232,"results":"28","hashOfConfig":"23"},{"size":865,"mtime":1611060349414,"results":"29","hashOfConfig":"23"},{"size":6644,"mtime":1618552174811,"results":"30","hashOfConfig":"23"},{"size":2375,"mtime":1618998305214,"results":"31","hashOfConfig":"23"},{"size":1678,"mtime":1617528579078,"results":"32","hashOfConfig":"23"},{"size":6589,"mtime":1618552139105,"results":"33","hashOfConfig":"23"},{"size":4422,"mtime":1619156384431,"results":"34","hashOfConfig":"23"},{"size":3704,"mtime":1619157325801,"results":"35","hashOfConfig":"23"},{"size":5346,"mtime":1619000387165,"results":"36","hashOfConfig":"23"},{"size":4766,"mtime":1618632798013,"results":"37","hashOfConfig":"23"},{"size":7880,"mtime":1618166193531,"results":"38","hashOfConfig":"23"},{"size":6692,"mtime":1618562083159,"results":"39","hashOfConfig":"23"},{"size":1993,"mtime":1618168449213,"results":"40","hashOfConfig":"23"},{"size":2862,"mtime":1618165545858,"results":"41","hashOfConfig":"23"},{"size":8467,"mtime":1618560617712,"results":"42","hashOfConfig":"23"},{"size":4792,"mtime":1619156061332,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"je0xno",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"46"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\index.js",[],["100","101"],"C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\App.js",["102","103"],"import React, { useEffect, useRef, useState } from \"react\"\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport elem from \"./Home\";\nimport SelectBranch from \"./Skills/SelectBranch\"\nimport login from \"./Auth/Login\"\nimport signup from \"./Auth/Signup\"\nimport SelectSkills from \"./Skills/SelectSkills\"\nimport AskSkills from \"./Skills/AskSkills\"\nimport MainPage from \"../src/Main/MainPage\"\nimport AddResource from \"../src/Main/AddResource\"\nimport Search from \"../src/Main/Search\"\nimport Resource from './Main/Resource'\nimport Skills from './Main/Skills'\nimport Profile from './Main/Profile'\nimport Chat from './Chat'\n\nfunction App() {\n \n\n  useEffect(()=>{\n   \n  })\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\"  exact component={elem}  />\n        <Route path=\"/login\" exact component={login} />\n        <Route path=\"/signup\" exact component={signup} />\n        <Route path=\"/branch\" exact component={SelectBranch}/>\n        <Route path=\"/:branchname/selectskills\" exact component={SelectSkills}/>\n        <Route path=\"/:branchname/askforskills\" exact component={AskSkills}/>\n        <Route path=\"/main\" exact component={()=><MainPage></MainPage>} />\n        <Route path=\"/:branchname/contribute\" exact component={AddResource} />\n        <Route path=\"/search\" exact component={Search}></Route>\n        <Route path=\"/resource/:id\" exact component={Resource}></Route>\n        <Route path=\"/skill/:id\" exact component={Skills}></Route>\n        <Route path=\"/myprofile\" exact component={Profile}></Route>\n        <Route path=\"/chat/:username\" exact component={Chat}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\n\nexport default App;\n","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Home.js",["104"],"import React,{ useEffect,useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\"\r\nimport {getUser} from \"./Auth/apiAuth\"\r\nimport axios from \"axios\"\r\n\r\n\r\nconst Home= (props)=>{\r\n    const [login,setLogin] = useState(0);\r\n   \r\n    useEffect(()=>{\r\n     \r\n       getUser().then((data)=>{\r\n           console.log(data)\r\n         localStorage.setItem(\"email\",data.data.tokenuser.email)\r\n         setLogin(1)\r\n       })\r\n       .catch((err)=>{\r\n           setLogin(2)\r\n       })\r\n       \r\n        \r\n    });\r\n\r\n  if(login === 0){\r\n      return (<h1>loading </h1>)\r\n  }\r\n  else if(login === 1){\r\n    \r\n    return (<h1>Home page {localStorage.getItem(\"email\")}</h1>)\r\n  }\r\n  else{\r\n     return ( <Redirect to=\"/login\"></Redirect> )\r\n  }\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Auth\\Login.js",["105"],"import Nav from \"./Nav\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Form, Alert } from \"react-bootstrap\";\r\nimport { login } from './apiAuth';\r\nimport { Redirect } from \"react-router-dom\"\r\nimport axios from \"axios\";\r\n\r\nconst Login = (props) => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    success: \"\",\r\n    error: \"\",\r\n    message: \"\",\r\n    islogin:false,\r\n  });\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value })\r\n  }\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n    var message, code\r\n    await login(values).then((resp) => {\r\n      message = resp[0]\r\n      code = resp[1]\r\n    })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n      if(code === 200){\r\n        localStorage.setItem(\"token\",\"Bearer \"+ message)\r\n        setValues({...values,message:\"user authenticated\",success:\"yes\",error:\"\",islogin:true})\r\n       \r\n        \r\n      }else{\r\n       \r\n        setValues({...values,message:message,error:\"yes\",success:\"\"})\r\n      }\r\n  }\r\n  \r\n  const LoginForm = () => (\r\n    <Form onSubmit={(e) => handleSubmit(e)}>\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control type=\"email\" placeholder=\"Enter email\" value={values.email} onChange={(e) => handleChange(e)} name=\"email\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"Password\" value={values.password} onChange={(e) => handleChange(e)} name=\"password\" />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Log in\r\n        </Button>\r\n    </Form>\r\n  );\r\n  const successForm = () => (\r\n    <Alert className=\"alert alert-success\" style={{ display: values.success === \"\" ? \"none\" : \"\" }}>\r\n      {values.message}\r\n    </Alert>\r\n  );\r\n  const failureForm = () => (\r\n    <Alert className=\"alert alert-danger\" style={{ display: values.error === \"\" ? \"none\" : \"\" }}>\r\n      {values.message}\r\n    </Alert>\r\n  );\r\n  if(values.islogin){\r\n    return ( <Redirect to=\"/main\"></Redirect> );\r\n  }else{\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <div className=\"container my-5\">\r\n        <h2>Log In</h2>\r\n        <br></br>\r\n        {successForm()}\r\n        {failureForm()}\r\n        {LoginForm()}\r\n      </div>\r\n    </div>\r\n  );\r\n  }\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Auth\\Nav.js",[],"C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Auth\\Signup.js",["106"],"import Nav from \"./Nav\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { signup } from \"./apiAuth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst Signup = (props) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    github: \"\",\r\n    linkedin: \"\",\r\n    contact: \"\",\r\n    error: \"\",\r\n    created: \"\",\r\n    message: \"\"\r\n  });\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value })\r\n\r\n  }\r\n  const handleSubmit =async (event) => {\r\n   var message,code\r\n    event.preventDefault();\r\n    await signup(values).then((resp)=>{\r\n      message=resp[0]\r\n      code=resp[1]\r\n     \r\n    })\r\n    .catch((err)=>{\r\n      console.log(err)\r\n    })\r\n    \r\n    if(code === 200){\r\n      setValues({...values,message:message,created:\"yes\",error:\"\"})\r\n      return ( <Redirect to=\"/login\" /> )\r\n    }\r\n    else{\r\n    setValues({...values,message:message,error:\"yes\",created:\"\"})\r\n        \r\n    }\r\n\r\n  }\r\n  const newForm = () => (\r\n    <Form className=\"my-5\" onSubmit={(e) => handleSubmit(e)}>\r\n      <Form.Group controlId=\"formGroupName\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"Enter your name\" value={values.name} onChange={(e) => handleChange(e)} name=\"name\" />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formGroupEmail\" className=\"my-5\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" value={values.email} onChange={(e) => handleChange(e)} />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formGroupPassword\" className=\"my-5\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={values.password} onChange={(e) => handleChange(e)} />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formGroupgithub\" className=\"my-5\">\r\n        <Form.Label>GitHub Username</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"Github username (optional)\" name=\"github\" value={values.github} onChange={(e) => handleChange(e)} />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formGrouplinkedin\" className=\"my-5\">\r\n        <Form.Label>Linkedin Username</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"Linkedin username (optional)\" name=\"linkedin\" value={values.linkedin} onChange={(e) => handleChange(e)} />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formGroupcontact\" className=\"my-5\">\r\n        <Form.Label>Contact</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"Contact Number\" name=\"contact\" value={values.contact} onChange={(e) => handleChange(e)} />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\" className=\"my-3\">\r\n        Sign up\r\n          </Button>\r\n    </Form>\r\n  );\r\n  const displayError = () => (\r\n    <Alert className=\"alert alert-danger\" style={{ display: values.error === \"\" ? \"none\" : \"\" }}>\r\n      {values.message}\r\n    </Alert>\r\n  )\r\n  const displaySucess = () => (\r\n    <Alert className=\"alert alert-success\" style={{ display: values.created === \"\" ? \"none\" : \"\" }}>\r\n      {values.message}\r\n    </Alert>\r\n  );\r\n  return (\r\n    <div>\r\n      <Nav />\r\n\r\n      <div className=\"container my-2\">\r\n        <h2>Sign Up</h2>\r\n        <br></br>\r\n        {displayError()}\r\n        {displaySucess()}\r\n        {newForm()}\r\n       \r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Auth\\apiAuth.js",[],"C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Skills\\SelectSkills.js",["107","108","109","110","111"],"import React, { useState,useEffect } from \"react\";\r\nimport { Form, Button,Alert } from \"react-bootstrap\";\r\nimport { addskill,takeskills,addmyskills } from './apiSkills';\r\nimport { Redirect } from 'react-router-dom';\r\nimport MainNav from \"../Main/MainNav\";\r\n\r\nconst SelectSkills = (props) => {\r\n   \r\n   // const branch = props.location.onprops.branch\r\n    const [values, setValues] = useState([]);\r\n    const [sub, setSub] = useState(false);\r\n    const [adddsp,setAdddsp] = useState(false);\r\n    const [newskill,setNewskill] = useState(\"\");\r\n    const [login,setLogin] = useState(1);\r\n    const [skills,setSkills] = useState([]);\r\n    const [load,setLoad] = useState(0);\r\n    const [popup,setPopup] = useState(\"\")\r\n    const [count,setCount] = useState(0);\r\n   useEffect(()=>{\r\n        let pt= props.location.pathname;\r\n        let branch=pt.split(\"/\")[1]\r\n        let data={\r\n            \"branch\":branch\r\n        }\r\n        console.log(data)\r\n        takeskills(data).then((dt)=>{\r\n           \r\n            setSkills(dt[0])\r\n            setLoad(1)\r\n        })\r\n        .catch((err)=>{\r\n            setLoad(0)\r\n        })\r\n   },[count])\r\n    const onChange = async (event) => {\r\n        let skills = new Set(values)\r\n\r\n        skills.add(event.target.value)\r\n\r\n        let toadd = []\r\n        skills.forEach((idx, val) => {\r\n            toadd.push(val)\r\n        })\r\n        setValues(toadd)\r\n        if (toadd.length >= 1) {\r\n            setSub(true)\r\n        }\r\n        else {\r\n            setSub(false)\r\n        }\r\n    }\r\n    const removeItem = (event, index) => {\r\n        let skills = new Array()\r\n        skills.push(...values)\r\n        skills.splice(index, 1)\r\n        setValues(skills)\r\n        if (skills.length >= 1) {\r\n            setSub(true)\r\n        }\r\n        else {\r\n            setSub(false)\r\n        }\r\n    }\r\n    const submitHandler =async (event) => {\r\n        event.preventDefault()\r\n        let pt= props.location.pathname;\r\n        let branch=pt.split(\"/\")[1]\r\n        let data={\r\n            \"branch\":branch,\r\n            \"skills\":values\r\n        }\r\n       await addmyskills(data).then((resp)=>{\r\n        let message=resp[0]\r\n        let code=resp[1]\r\n        if(code===401){\r\n            setLogin(0);\r\n        }\r\n        else if(code===200){\r\n            setPopup(\"success\")\r\n            console.log(message)\r\n        }\r\n        else{\r\n            setPopup(\"failed\")\r\n        }\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err)\r\n      })\r\n       \r\n        \r\n    }\r\n    const skillSubmitHandler = async (event)=>{\r\n        event.preventDefault();\r\n        let pt= props.location.pathname;\r\n        let branch=pt.split(\"/\")[1]\r\n        \r\n        let data={\r\n            \"branch\":branch,\r\n            \"skill\":newskill\r\n        }\r\n        await addskill(data).then((resp)=>{\r\n            let message=resp[0]\r\n            let code=resp[1]\r\n            if(code===401){\r\n                setLogin(0);\r\n            }\r\n            else if(code===200){\r\n                setCount(count+1);\r\n            }\r\n          })\r\n          .catch((err)=>{\r\n            console.log(err)\r\n          })\r\n\r\n    }\r\n    const skillChangeHandler = (event)=>{\r\n        setNewskill(event.target.value)\r\n    }\r\n    var Popup=(<h1></h1>);\r\n    if(popup===\"success\"){\r\n        Popup=(<Alert className=\"alert alert-success\">{popup}</Alert>);\r\n    }\r\n    if(popup===\"failed\"){\r\n        Popup=(<Alert className=\"alert alert-danger\">{popup}</Alert>);\r\n    }\r\n    if(login){\r\n        if(!load){\r\n            return <h1>Loading ..</h1>\r\n        }\r\n        else{\r\n    return (\r\n        <div>\r\n            <MainNav/>\r\n        <div className=\"container my-5\">\r\n            <h3>Here You Can Select your Skills </h3>\r\n            <div>\r\n               {Popup}\r\n            </div>\r\n            <div className=\"row my-5\">\r\n                <div className=\"col-md-9 col-sm-9\">\r\n                    {/* <Form.Group controlId=\"seldskill\">\r\n                           <Form.Label>selected skills</Form.Label>\r\n                           <Form.Control type=\"text\" name=\"seldskills\" value={values} style={{\"font-family\":\"cursive\"}}></Form.Control>\r\n                       </Form.Group> */}\r\n                    <ul className=\"tags\">\r\n                        {values.map((val, i) => { return <li key={i} className=\"tag\" onClick={(e) => removeItem(e, i)}>{val}</li> })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n\r\n\r\n                    <Form onSubmit={(e) => submitHandler(e)}>\r\n                        <Form.Group controlId=\"selskill\" className=\"my-5\">\r\n                            <Form.Label>Select Skills</Form.Label>\r\n                            <Form.Control as=\"select\" onChange={(e) => onChange(e)} name=\"selskill\">\r\n                                {skills.map((val,i)=>{\r\n                                    return <option key={i} value={val.Topic}>{val.Topic}</option>\r\n                                })}                               \r\n                                <h2></h2>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" className=\"btn btn-success\" disabled={sub ? \"\" : \"true\"}>submit</Button>\r\n                    </Form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 my-5 \" style={{ textAlign: \"end\" }}>\r\n\r\n                    <h4> Add A New Skill Here.</h4>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <button className=\"btn btn-primary\" onClick={(e)=>{setAdddsp(true)}}>+ add</button>\r\n                    <small className=\"ml-2\">( first try to find in available )</small>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <div style={{display:adddsp?\"\":\"none\"}} className=\"ml-5 my-5\">\r\n                       <Form onSubmit={(e)=>{skillSubmitHandler(e)}}>\r\n                           <Form.Group>\r\n                               <Form.Label> name your skill here. </Form.Label>\r\n                               <Form.Control type=\"text\" onChange={(e)=>{skillChangeHandler(e)}} value={newskill}></Form.Control>\r\n                           </Form.Group>\r\n                           <Button type=\"submit\" className=\"btn btn-primary\">+</Button>\r\n                       </Form>\r\n                       \r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        </div>\r\n    \r\n                    \r\n    );\r\n    }\r\n}\r\n    else{\r\n        return (<Redirect to=\"/login\"></Redirect>)\r\n    }\r\n};\r\n\r\nexport default SelectSkills;\r\n\r\n","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Skills\\SelectBranch.js",["112","113","114","115"],"import React, { useState,useEffect } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\"\r\nimport MainNav from '../Main/MainNav'\r\n\r\nconst SelectBranch = (props) => {\r\n    const [opt,setOpt] = useState(\"selectskills\");\r\n    let data=[\r\n               {name:\"Computer Science\",desc:\"In this branch you'll get things related to programming and computer science related topics and technologies.\"},\r\n               {name:\"Commerce\",desc:\"In this branch you'll get things related to Accountancy,economics,business management and many more.\"},\r\n               {name:\"Hospitality\",desc:\"In this branch you'll get things related to hotel management,hospital maintainence,event management etc.\"},\r\n               {name:\"Agriculture\",desc:\"In this branch you'll get things related to farming,seed management,selling and buying crops\"},\r\n               {name:\"Other\",desc:\"In this branch you'll get things like cooking,driving,carpentaring,electrician work,auto mobile work\"}\r\n             ]\r\n    useEffect(()=>{\r\n        try{\r\n        setOpt(props.location.onprops.option)\r\n        }\r\n        catch{\r\n            \r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            <MainNav/>\r\n        <div className=\"container\">\r\n            <h1>{props.location.option}</h1>\r\n            <h2 className=\"my-5\">Select Your Branch</h2>\r\n            <div className=\"row\">\r\n                {\r\n                data.map((val,idx)=>{return ( \r\n                <div className=\"col-md-4\" key={idx}>\r\n                    <div className=\"card my-3\" style={{ width: \"15rem\"}}>\r\n                        <img className=\"card-img-top\" src=\"https://image.freepik.com/free-vector/light-blue-project-management-concept_23-2147782704.jpg\"\r\n                            alt=\"Card image cap\" />\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\"><strong>{val.name}</strong></h5>\r\n                            <p className=\"card-text\">{val.desc}</p>\r\n                            <Link className=\"btn btn-primary\" to={{pathname:val.name+\"/\"+opt,onprops:{branch:val.name}}}>Get Into</Link>               \r\n                        </div>\r\n                    </div>\r\n                </div> )})   \r\n                }\r\n            </div>\r\n        </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SelectBranch;","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Skills\\apiSkills.js",[],"C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Skills\\AskSkills.js",["116","117","118","119","120"],"import React, { useState,useEffect } from \"react\";\r\nimport { Form, Button,Alert } from \"react-bootstrap\";\r\nimport { addskill,takeskills,askforskills } from './apiSkills';\r\nimport { Redirect } from 'react-router-dom';\r\nimport MainNav from \"../Main/MainNav\";\r\n\r\nconst SelectSkills = (props) => {\r\n   \r\n   \r\n    const [values, setValues] = useState([]);\r\n    const [sub, setSub] = useState(false);\r\n    const [adddsp,setAdddsp] = useState(false);\r\n    const [newskill,setNewskill] = useState(\"\");\r\n    const [login,setLogin] = useState(1);\r\n    const [skills,setSkills] = useState([]);\r\n    const [load,setLoad] = useState(0);\r\n    const [popup,setPopup] = useState(\"\")\r\n    const [count,setCount] = useState(0);\r\n   useEffect(()=>{\r\n        let pt= props.location.pathname;\r\n        let branch=pt.split(\"/\")[1]\r\n        let data={\r\n            \"branch\":branch\r\n        }\r\n        console.log(data)\r\n        takeskills(data).then((dt)=>{\r\n           \r\n            setSkills(dt[0])\r\n            setLoad(1)\r\n        })\r\n        .catch((err)=>{\r\n            setLoad(0)\r\n        })\r\n   },[count])\r\n    const onChange = async (event) => {\r\n        let skills = new Set(values)\r\n\r\n        skills.add(event.target.value)\r\n\r\n        let toadd = []\r\n        skills.forEach((idx, val) => {\r\n            toadd.push(val)\r\n        })\r\n        setValues(toadd)\r\n        if (toadd.length >= 1) {\r\n            setSub(true)\r\n        }\r\n        else {\r\n            setSub(false)\r\n        }\r\n    }\r\n    const removeItem = (event, index) => {\r\n        let skills = new Array()\r\n        skills.push(...values)\r\n        skills.splice(index, 1)\r\n        setValues(skills)\r\n        if (skills.length >= 1) {\r\n            setSub(true)\r\n        }\r\n        else {\r\n            setSub(false)\r\n        }\r\n    }\r\n    const submitHandler =async (event) => {\r\n        event.preventDefault()\r\n        let pt= props.location.pathname;\r\n        let branch=pt.split(\"/\")[1]\r\n        let data={\r\n            \"branch\":branch,\r\n            \"skills\":values\r\n        }\r\n       await askforskills(data).then((resp)=>{\r\n        let message=resp[0]\r\n        let code=resp[1]\r\n        if(code===401){\r\n            setLogin(0);\r\n        }\r\n        else if(code===200){\r\n            setPopup(\"success\")\r\n            console.log(message)\r\n        }\r\n        else{\r\n            setPopup(\"failed\")\r\n        }\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err)\r\n      })\r\n       \r\n        \r\n    }\r\n    const skillSubmitHandler = async (event)=>{\r\n        event.preventDefault();\r\n        let pt= props.location.pathname;\r\n        let branch=pt.split(\"/\")[1]\r\n        \r\n        let data={\r\n            \"branch\":branch,\r\n            \"skill\":newskill\r\n        }\r\n        await addskill(data).then((resp)=>{\r\n            let message=resp[0]\r\n            let code=resp[1]\r\n            if(code===401){\r\n                setLogin(0);\r\n            }\r\n            else if(code===200){\r\n                setCount(count+1);\r\n            }\r\n          })\r\n          .catch((err)=>{\r\n            console.log(err)\r\n          })\r\n\r\n    }\r\n    const skillChangeHandler = (event)=>{\r\n        setNewskill(event.target.value)\r\n    }\r\n    var Popup=(<h1></h1>);\r\n    if(popup===\"success\"){\r\n        Popup=(<Alert className=\"alert alert-success\">{popup}</Alert>);\r\n    }\r\n    if(popup===\"failed\"){\r\n        Popup=(<Alert className=\"alert alert-danger\">{popup}</Alert>);\r\n    }\r\n    if(login){\r\n        if(!load){\r\n            return <h1>Loading ..</h1>\r\n        }\r\n        else{\r\n    return (\r\n        <div>\r\n        <MainNav/>\r\n        <div className=\"container my-5\">\r\n            <h3>Here You Can Select your Skills </h3>\r\n            <div>\r\n               {Popup}\r\n            </div>\r\n            <div className=\"row my-5\">\r\n                <div className=\"col-md-9 col-sm-9\">\r\n                    {/* <Form.Group controlId=\"seldskill\">\r\n                           <Form.Label>selected skills</Form.Label>\r\n                           <Form.Control type=\"text\" name=\"seldskills\" value={values} style={{\"font-family\":\"cursive\"}}></Form.Control>\r\n                       </Form.Group> */}\r\n                    <ul className=\"tags\">\r\n                        {values.map((val, i) => { return <li key={i} className=\"tag\" onClick={(e) => removeItem(e, i)}>{val}</li> })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n\r\n\r\n                    <Form onSubmit={(e) => submitHandler(e)}>\r\n                        <Form.Group controlId=\"selskill\" className=\"my-5\">\r\n                            <Form.Label>Select Skills</Form.Label>\r\n                            <Form.Control as=\"select\" onChange={(e) => onChange(e)} name=\"selskill\">\r\n                                {skills.map((val,i)=>{\r\n                                    return <option key={i} value={val.Topic}>{val.Topic}</option>\r\n                                })}                               \r\n                                <h2></h2>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" className=\"btn btn-success\" disabled={sub ? \"\" : \"true\"}>submit</Button>\r\n                    </Form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 my-5 \" style={{ textAlign: \"end\" }}>\r\n\r\n                    <h4> Add A New Skill Here.</h4>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <button className=\"btn btn-primary\" onClick={(e)=>{setAdddsp(true)}}>+ add</button>\r\n                    <small className=\"ml-2\">( first try to find in available )</small>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <div style={{display:adddsp?\"\":\"none\"}} className=\"ml-5 my-5\">\r\n                       <Form onSubmit={(e)=>{skillSubmitHandler(e)}}>\r\n                           <Form.Group>\r\n                               <Form.Label> name your skill here. </Form.Label>\r\n                               <Form.Control type=\"text\" onChange={(e)=>{skillChangeHandler(e)}} value={newskill}></Form.Control>\r\n                           </Form.Group>\r\n                           <Button type=\"submit\" className=\"btn btn-primary\">+</Button>\r\n                       </Form>\r\n                       \r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        </div>\r\n                    \r\n    );\r\n    }\r\n}\r\n    else{\r\n        return (<Redirect to=\"/login\"></Redirect>)\r\n    }\r\n};\r\n\r\nexport default SelectSkills;\r\n\r\n","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\MainPage.js",["121","122","123","124","125","126","127","128","129","130","131","132"],"C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\MainNav.js",["133","134","135","136","137","138","139"],"C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\Cards.js",["140","141","142","143","144","145","146"],"import {React,useState} from \"react\";\r\nimport {Card,Button,Modal} from \"react-bootstrap\"\r\nimport {getUserDetails,getResc,getSkills} from './apiMain'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst handleDetails=(event,usr)=>{\r\n      event.preventDefault();\r\n      let data={\r\n        \"id\":[usr._id]\r\n      }\r\n     getUserDetails(data)\r\n}\r\nconst handleSkills=(event,skl)=>{\r\n  event.preventDefault();\r\n  let data={\r\n    \"id\":[skl._id]\r\n  }\r\n  \r\n}\r\nconst handleResc=(event,rsc)=>{\r\n  event.preventDefault();\r\n  let data={\r\n    \"id\":[rsc._id]\r\n  }\r\n  getResc(data)\r\n}\r\n\r\n\r\nconst Cards = (props)=>{\r\n\r\n\r\n\r\n\r\nconst [show, setShow] = useState(false);\r\nconst [haveskills,setHaveskills]=useState([]);\r\nconst [intskills,setIntskills]=useState([]);\r\nconst handleClose = () => setShow(false);\r\nconst handleShow = () => setShow(true);\r\n\r\nconst intSkills=async (event,dat)=>{\r\n  event.preventDefault();\r\n  let data={\r\n    \"id\":dat.gain\r\n  }\r\n  const resl=await getSkills(data);\r\n  setIntskills(resl[0])\r\n\r\n}\r\n\r\nconst haveSkills=async (event,dat)=>{\r\n  event.preventDefault();\r\n  let data={\r\n    \"id\":dat.have\r\n  }\r\n  const resl=await getSkills(data);\r\n  setHaveskills(resl[0])\r\n\r\n}\r\n\r\n    if(props.type == \"user\"){\r\n     return (\r\n     <Card style={{ width: '15rem' }} bg=\"dark\" text=\"white\">\r\n    <Card.Img variant=\"top\" src=\"https://www.pinclipart.com/picdir/middle/148-1481893_original-size-is-626-626-pixels-icon.png\" />\r\n    <Card.Body>\r\n      <Card.Title>{props.data.name}</Card.Title>\r\n      <Card.Text>\r\n        <strong>Email:  </strong>{props.data.email}\r\n      </Card.Text>\r\n      {/* modal */}\r\n      <Modal show={show} onHide={handleClose} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.data.name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <strong>Email:</strong><p>{props.data.email}</p>\r\n          <br></br>\r\n          <strong>Skills have:</strong>\r\n          {haveskills.map((val,key)=>{\r\n            return(\r\n              <li key={key}>{val.Topic}</li>\r\n            )\r\n          })}\r\n          <br></br>\r\n          <strong>Skills Interested:</strong>\r\n          {intskills.map((val,key)=>{\r\n            return(\r\n              <li>{val.Topic}</li>\r\n            )\r\n          })}\r\n          <br></br>\r\n          <hr></hr>\r\n          <strong>github:</strong><p>{props.data.github}</p>\r\n          <br></br>\r\n          <strong>linked in:</strong><p>{props.data.linkedin}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      {/* modal */}\r\n      <Button variant=\"primary\" onClick={(e)=>{handleDetails(e,props.data);haveSkills(e,props.data);intSkills(e,props.data);handleShow();}} >Get Details</Button>\r\n      <Link  to={{pathname:\"/chat/\"+props.data.email}}  className=\"btn btn-outline-secondary\" style={{backgroundColor:\"white\"}}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-chat-dots\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M5 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"/>\r\n  <path d=\"m2.165 15.803.02-.004c1.83-.363 2.948-.842 3.468-1.105A9.06 9.06 0 0 0 8 15c4.418 0 8-3.134 8-7s-3.582-7-8-7-8 3.134-8 7c0 1.76.743 3.37 1.97 4.6a10.437 10.437 0 0 1-.524 2.318l-.003.011a10.722 10.722 0 0 1-.244.637c-.079.186.074.394.273.362a21.673 21.673 0 0 0 .693-.125zm.8-3.108a1 1 0 0 0-.287-.801C1.618 10.83 1 9.468 1 8c0-3.192 3.004-6 7-6s7 2.808 7 6c0 3.193-3.004 6-7 6a8.06 8.06 0 0 1-2.088-.272 1 1 0 0 0-.711.074c-.387.196-1.24.57-2.634.893a10.97 10.97 0 0 0 .398-2z\"/>\r\n</svg></Link>\r\n    </Card.Body>\r\n    </Card>\r\n    );\r\n  }\r\n  if(props.type == \"resc\"){\r\n    return (\r\n      <Card style={{ width: '15rem' }} bg=\"dark\" text=\"white\">\r\n     <Card.Img variant=\"top\" src=\"https://lh3.googleusercontent.com/tytWPISJC9FHFFEcYhjw-VgITMCVqaOs52CqEGyp5PlAlYn7P_eG1m6UD3jTGY-qoH6BKp6ukPw=e14-rj-sc0xffffff-w1270\" />\r\n     <Card.Body>\r\n       <Card.Title>{props.data.title}</Card.Title>\r\n       <Link className=\"btn btn-primary\" to={{pathname:\"/resource/\"+props.data._id}}>See More..</Link>\r\n     </Card.Body>\r\n     </Card>\r\n     );\r\n  }\r\n  if(props.type == \"skills\"){\r\n    return (\r\n      <Card style={{ width: '15rem' }} bg=\"dark\" text=\"white\">\r\n     <Card.Img variant=\"top\" src=\"https://lh3.googleusercontent.com/proxy/jypCZMyeSStHpR-ArbzdXJDe2X2EYBs9ojEvBQIt5V-x9yviQLMEkKzl88HN6jQ5_qFajl6z8vSR4I9MDtn2AEZikEMWWarG2pXPXCpyCSps48kpFSAYnHxUNzae-Xw3eDxvvBubzpCeK3M\" />\r\n     <Card.Body>\r\n       <Card.Title>{props.data.Branch}</Card.Title>\r\n       <Card.Text>\r\n         <strong>Topic:  </strong>{props.data.Topic}\r\n       </Card.Text>\r\n       <Link  className=\"btn btn-primary\" to={{pathname:\"/skill/\"+props.data._id}}>Explore</Link>\r\n     </Card.Body>\r\n     </Card>\r\n     );\r\n  }\r\n  if(props.type == \"flatcards\"){\r\n    return (\r\n      \r\n      <Card>\r\n        <Card.Header>Featured</Card.Header>\r\n        <Card.Body>\r\n          <Card.Title>{props.data.title}</Card.Title>\r\n          <Card.Text>\r\n            This is contibuted by other users\r\n          </Card.Text>\r\n          <Link className=\"primary\" to={{pathname:\"/resource/\"+props.data._id}}>See More</Link>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cards;","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\apiMain.js",[],"C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\AddResource.js",["147","148","149","150","151","152"],"import { React,useEffect,useState } from \"react\";\r\nimport { Form, Button,Alert, FormControl,FormLabel,FormGroup } from \"react-bootstrap\";\r\nimport { addskill,takeskills} from '../Skills/apiSkills';\r\nimport { addResources } from \"../Main/apiMain\"\r\nimport { Redirect } from 'react-router-dom';\r\nimport MainNav from \"./MainNav\";\r\n\r\nconst AddResource = (props)=>{\r\n  \r\n   \r\n    const [values, setValues] = useState([]);\r\n    const [sub, setSub] = useState(false);\r\n    const [adddsp,setAdddsp] = useState(false);\r\n    const [newskill,setNewskill] = useState(\"\");\r\n    const [login,setLogin] = useState(1);\r\n    const [skills,setSkills] = useState([]);\r\n    const [load,setLoad] = useState(0);\r\n    const [popup,setPopup] = useState(\"\")\r\n    const [count,setCount] = useState(0);\r\n    const [main,setMain]=useState({\r\n        title:\"\",\r\n        body:\"\"\r\n    })\r\n   useEffect(()=>{\r\n        let pt= props.location.pathname;\r\n        let branch=pt.split(\"/\")[1]\r\n        let data={\r\n            \"branch\":branch\r\n        }\r\n        console.log(data)\r\n        takeskills(data).then((dt)=>{\r\n           \r\n            setSkills(dt[0])\r\n            setLoad(1)\r\n        })\r\n        .catch((err)=>{\r\n            setLoad(0)\r\n        })\r\n   },[count])\r\n    const onChange = async (event) => {\r\n        let skills = new Set(values)\r\n\r\n        skills.add(event.target.value)\r\n\r\n        let toadd = []\r\n        skills.forEach((idx, val) => {\r\n            toadd.push(val)\r\n        })\r\n        setValues(toadd)\r\n        if (toadd.length >= 1) {\r\n            setSub(true)\r\n        }\r\n        else {\r\n            setSub(false)\r\n        }\r\n    }\r\n    const removeItem = (event, index) => {\r\n        let skills = new Array()\r\n        skills.push(...values)\r\n        skills.splice(index, 1)\r\n        setValues(skills)\r\n        if (skills.length >= 1) {\r\n            setSub(true)\r\n        }\r\n        else {\r\n            setSub(false)\r\n        }\r\n    }\r\n    const submitHandler =async (event) => {\r\n        event.preventDefault()\r\n        let pt= props.location.pathname;\r\n        let branch=pt.split(\"/\")[1]\r\n        let data={\r\n            \"title\":main.title,\r\n            \"body\":main.body,\r\n            \"branch\":branch,\r\n            \"skills\":values\r\n        }\r\n       await addResources(data).then((resp)=>{\r\n        let message=resp[0]\r\n        let code=resp[1]\r\n        if(code===401){\r\n            setLogin(0);\r\n        }\r\n        else if(code===200){\r\n            setPopup(\"success\")\r\n            console.log(message)\r\n        }\r\n        else{\r\n            setPopup(\"failed\")\r\n        }\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err)\r\n      })\r\n       \r\n        \r\n    }\r\n    const skillSubmitHandler = async (event)=>{\r\n        event.preventDefault();\r\n        let pt= props.location.pathname;\r\n        let branch=pt.split(\"/\")[1]\r\n        \r\n        let data={\r\n            \"title\":main.title,\r\n            \"body\":main.body,\r\n            \"branch\":branch,\r\n            \"skill\":newskill\r\n        }\r\n        await addskill(data).then((resp)=>{\r\n            let message=resp[0]\r\n            let code=resp[1]\r\n            if(code===401){\r\n                setLogin(0);\r\n            }\r\n            else if(code===200){\r\n                setPopup(\"success\")\r\n                console.log(message)\r\n                setCount(count+1)\r\n            }\r\n            else{\r\n                setPopup(\"failed\")\r\n            }\r\n          })\r\n          .catch((err)=>{\r\n            console.log(err)\r\n          })\r\n        \r\n    }\r\n    const skillChangeHandler = (event)=>{\r\n        setNewskill(event.target.value)\r\n    }\r\n    const bodyChangeHandler = (event)=>{\r\n        setMain({...main,[event.target.name]:event.target.value})\r\n    }\r\n\r\n    var Popup=(<h1></h1>);\r\n    if(popup===\"success\"){\r\n        Popup=(<Alert className=\"alert alert-success\">{popup}</Alert>);\r\n    }\r\n    if(popup===\"failed\"){\r\n        Popup=(<Alert className=\"alert alert-danger\">{popup}</Alert>);\r\n    }\r\n    if(login){\r\n        if(!load){\r\n            return <h1>Loading ..</h1>\r\n        }\r\n        else{\r\n    return (\r\n        <div>\r\n            <MainNav/>\r\n        <div className=\"container my-5\">\r\n            <h3>Here You Can Select Topics</h3>\r\n            <div>\r\n               {Popup}\r\n            </div>\r\n            <div className=\"row my-5\">\r\n                <div className=\"col-md-9 col-sm-9\">\r\n                    {/* <Form.Group controlId=\"seldskill\">\r\n                           <Form.Label>selected skills</Form.Label>\r\n                           <Form.Control type=\"text\" name=\"seldskills\" value={values} style={{\"font-family\":\"cursive\"}}></Form.Control>\r\n                       </Form.Group> */}\r\n                    <ul className=\"tags\">\r\n                        {values.map((val, i) => { return <li key={i} className=\"tag\" onClick={(e) => removeItem(e, i)}>{val}</li> })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n\r\n\r\n                    <Form>\r\n                        <Form.Group controlId=\"selskill\" className=\"my-5\">\r\n                            <Form.Label>Select Skills</Form.Label>\r\n                            <Form.Control as=\"select\" onChange={(e) => onChange(e)} name=\"selskill\">\r\n                                {skills.map((val,i)=>{\r\n                                    return <option key={i} value={val.Topic}>{val.Topic}</option>\r\n                                })}                               \r\n                                <h2></h2>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 my-5 \" style={{ textAlign: \"end\" }}>\r\n\r\n                    <h4> Add A New Skill Here.</h4>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <button className=\"btn btn-primary\" onClick={(e)=>{setAdddsp(true)}}>+ add</button>\r\n                    <small className=\"ml-2\">( first try to find in available )</small>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <div style={{display:adddsp?\"\":\"none\"}} className=\"ml-5 my-5\">\r\n                       <Form onSubmit={(e)=>{skillSubmitHandler(e)}}>\r\n                           <Form.Group>\r\n                               <Form.Label> name your skill here. </Form.Label>\r\n                               <Form.Control type=\"text\" onChange={(e)=>{skillChangeHandler(e)}} value={newskill}></Form.Control>\r\n                           </Form.Group>\r\n                           <Button type=\"submit\" className=\"btn btn-primary\">+</Button>\r\n                       </Form>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <br></br>  \r\n            <br></br>\r\n\r\n            <h2>Your Opinion Here ... </h2>                    \r\n           \r\n            <div>\r\n                <Form onSubmit={(e)=>{submitHandler(e)}}>\r\n                    <Form.Group>\r\n                        <FormLabel>Title</FormLabel>\r\n                        <FormControl type=\"text\" value={main.title} placeholder=\"title\" name=\"title\" onChange={(e)=>{bodyChangeHandler(e)}}></FormControl>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <FormLabel>Body</FormLabel>\r\n                        <FormControl as=\"textarea\" value={main.body} placeholder=\"full explanation\" name=\"body\" rows={8} onChange={(e)=>{bodyChangeHandler(e)}}></FormControl>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" className=\"btn btn-primary\">Add</Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n        </div>\r\n                    \r\n    );\r\n    }\r\n}\r\n    else{\r\n        return (<Redirect to=\"/login\"></Redirect>)\r\n    }\r\n}\r\n\r\nexport default AddResource","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\Search.js",["153","154","155","156","157","158","159","160"],"import {React,useState,useEffect} from \"react\"\r\nimport MainNav from \"../Main/MainNav\"\r\nimport {search} from './apiMain'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Button, Nav, Navbar, Carousel } from \"react-bootstrap\";\r\nimport Cards from '../Main/Cards'\r\n\r\nconst Search = (props)=>{\r\n    const [searchexp,setSearchexp]=useState(\"\");\r\n    const [count,setCount]=useState(0);\r\n    const [rels,setRels]=useState([[],[],[]]);\r\n    const [isuser,setIsuser]=useState(false);\r\n    const [isskill,setIsskill]=useState(false);\r\n    const [isrsc,setIsrsc]=useState(false);\r\n    const [users,setUsers]=useState([]);\r\n    const [resources,setResources]=useState([]);\r\n    const [skills,setSkills]=useState([]);\r\n\r\n    const handleChange = (event)=>{\r\n        setSearchexp(event.target.value)\r\n    }\r\n    const handleSubmit = async (event)=>{\r\n        \r\n        event.preventDefault();\r\n        try{\r\n            var query=props.location.onprops.query\r\n        }\r\n        catch(err){\r\n            var query=searchexp;\r\n        }\r\n        let data=await search(query);\r\n        setRels(data)\r\n        setCount(count+1)\r\n    } \r\n    useEffect(()=>{\r\n       \r\n        const fetch=async ()=>{\r\n            try{\r\n                var query=props.location.onprops.query\r\n            }\r\n            catch(err){\r\n                var query=searchexp;\r\n            }\r\n            let data=await search(query);\r\n            setRels(data)\r\n            if(count>0){\r\n\r\n                if(rels[0].users.length>0){\r\n                    setIsuser(true)\r\n                    setUsers(rels[0].users)\r\n                }\r\n                else\r\n                setIsuser(false)\r\n                if(rels[0].resources.length>0){\r\n                    setIsrsc(true)\r\n                    setResources(rels[0].resources)\r\n                }\r\n                else\r\n                setIsrsc(false)\r\n                if(rels[0].skills.length>0){\r\n                    setIsskill(true)\r\n                    setSkills(rels[0].skills)\r\n                }\r\n                else\r\n                    setIsskill(false)\r\n            }\r\n            console.log(rels)\r\n        }\r\n        fetch();\r\n    },[count]) \r\n    \r\n    return(\r\n        <div>\r\n            <div>\r\n                <nav className = \"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">Navbar</Link>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item active\" style={{backgroundColor:\"#323ea8\"}}>\r\n                            <Link className=\"nav-link\" to={{pathname:\"/branch\",onprops:{option:\"selectskills\"}}}>+ required skills</Link>\r\n                        </li>\r\n                        <li className=\"nav-item active ml-3\" style={{backgroundColor:\"#323ea8\"}}>\r\n                        <Link className=\"nav-link\" to={{pathname:\"/branch\",onprops:{option:\"askforskills\"}}}>+ add my skills</Link>\r\n                        </li>\r\n                        <li className=\"nav-item active ml-3\" style={{backgroundColor:\"#323ea8\"}}>\r\n                        <Link className=\"nav-link\" to={{pathname:\"/branch\",onprops:{option:\"contribute\"}}}>+ contribute</Link>\r\n                        </li>\r\n                        </ul>\r\n                    </div>\r\n                    <form class=\"form-inline my-2 my-lg-0\">\r\n                    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" value={searchexp} onChange={(e)=>handleChange(e)}/>\r\n                    {/* <Link className=\"btn btn-outline-success my-2 my-sm-0\" to={{pathname:\"/search\",onprops:{query:searchexp}}}>Search</Link> */}\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" onClick={(e)=>{handleSubmit(e)}}>search</button>\r\n                    </form>\r\n                    <p className=\"nav-link\"></p>\r\n                    <Link className=\"btn btn-success my-2 my-sm-0\" to={{pathname:\"/myprofile\"}}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-person-fill\" viewBox=\"0 0 16 16\">\r\n                    < path d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\r\n                    </svg>Profile</Link>\r\n                    <li className=\"nav-item active mr-auto\">\r\n                    <button className=\"btn btn-primary my-2 ml-3 my-sm-0\">Logout</button>\r\n                    </li>\r\n                    </nav>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <h2>Results ... </h2>\r\n                <br></br>\r\n                <hr></hr>\r\n                <div className=\"users\" style={{display:isuser?\"\":\"none\"}}>\r\n                <h2>users</h2>\r\n                    <div className=\"row\">\r\n                        <br></br>\r\n                        \r\n                        {users.map((val,key)=>{\r\n                             return (\r\n                                <div className=\"col-md-4\">\r\n                                  <Cards data={val} key={key} type=\"user\"/>\r\n                                  <br></br>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <hr></hr>\r\n                </div>\r\n                <div className=\"rscs\" style={{display:isrsc?\"\":\"none\"}}>\r\n                    <h2>Resources</h2>\r\n                    <div className=\"row\">\r\n                        <br></br>\r\n                        {resources.map((val,key)=>{\r\n                            return(\r\n                              <div className=\"col-md-4\">\r\n                                  <Cards data={val} key={key} type=\"resc\"/>\r\n                                  <br></br>\r\n                              </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <hr></hr>\r\n                </div>\r\n                <div className=\"skls\" style={{display:isskill?\"\":\"none\"}}>\r\n                    <h2>skills</h2>\r\n                    <div className=\"row\">\r\n                        <br></br>\r\n                        {skills.map((val,key)=>{\r\n                           return(\r\n                               <div className=\"col-md-4\">\r\n                                   <Cards data={val} key={key} type=\"skills\"/>\r\n                                   <br></br>\r\n                               </div>\r\n                           )\r\n                        })}\r\n                    </div>\r\n                    <hr></hr>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\Resource.js",["161","162","163"],"import {React,useEffect,useState} from \"react\"\r\nimport { Form } from \"react-bootstrap\"\r\nimport {getSkills,getUserDetails,getResc} from './apiMain'\r\nimport MainNav from './MainNav'\r\n\r\nconst Resource = (props)=>{\r\n    \r\nconst [author,setAuthor] = useState(\"\");\r\nconst [skl,setSkl]=useState([]);\r\nconst [dat,setDat]=useState({})\r\nconst [load,setLoad]=useState(true);\r\n\r\n\r\nuseEffect(async ()=>{\r\n  let id=props.location.pathname.split('/resource/')[1]\r\n  await getResc({\"id\":[id]}).then(async (resl)=>{\r\n        let data=resl[0][0]\r\n        setDat(data)\r\n        \r\n        await getUserDetails({\"id\":[data.owner]}).then((resl)=>{\r\n            console.log(resl)\r\n            try{\r\n                setAuthor(resl[0][0].name)\r\n            }\r\n            catch{\r\n\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n        await getSkills({\"id\":data.Type}).then((resl)=>{\r\n            console.log(resl)\r\n            try{\r\n                setSkl(resl[0])\r\n            }\r\n            catch{\r\n\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    setLoad(false)\r\n  })\r\n  .catch((err)=>{\r\n      console.log(err)\r\n  })\r\n  \r\n},[]);\r\n   \r\n    if(load){\r\n        return (\r\n            <h1>Loading</h1>\r\n        )\r\n    }\r\n    else{\r\n    return(\r\n        <div>\r\n        <MainNav/>\r\n        <br></br>\r\n        <br></br>\r\n        <div className=\"container\">\r\n            <h2>{dat.title}</h2>\r\n            <br></br>\r\n            <hr></hr>\r\n            <p><strong>{dat.body}</strong></p>\r\n            <br></br>\r\n            <hr></hr>\r\n            <footer>\r\n           <h4>Author</h4><p><strong>{author}</strong></p> \r\n            <hr></hr>\r\n            <h4>Related with</h4>\r\n            {skl.map((val,key)=>{\r\n                return(\r\n                    <li key={key}>{val.Topic}</li>\r\n                )\r\n            })}\r\n            </footer>\r\n        </div>\r\n        </div>\r\n    )\r\n        }\r\n}\r\n\r\nexport default Resource","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\Skills.js",["164","165"],"import {React,useEffect,useState} from \"react\"\r\nimport {} from \"react-bootstrap\"\r\nimport {exploreSkills,getSkills} from './apiMain'\r\nimport Cards from './Cards'\r\nimport MainNav from './MainNav'\r\n\r\nconst Skills = (props)=>{\r\n    const [skl,setSkl]=useState({})\r\n    const [isuser,setIsuser]=useState(false);\r\n    const [isrsc,setIsrsc]=useState(false);\r\n    const [users,setUsers]=useState([]);\r\n    const [resources,setResources]=useState([]);\r\n\r\n    useEffect(async ()=>{\r\n        let id=props.location.pathname.split('/skill/')[1]\r\n        console.log(id)\r\n        await getSkills({\"id\":[id]}).then((resl)=>{\r\n            try{\r\n                let data=resl[0][0]\r\n                setSkl(data)\r\n            }\r\n            catch{\r\n\r\n            }\r\n        })\r\n        .catch((err)=>{console.log(err)})\r\n\r\n        await exploreSkills({\"id\":id}).then((resl)=>{\r\n            let data=resl[0]\r\n            if(data.users.length>0){\r\n                setIsuser(true)\r\n                setUsers(data.users)\r\n            }\r\n            if(data.resources.length>0){\r\n                setIsrsc(true)\r\n                setResources(data.resources)\r\n            }\r\n\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n        <MainNav/>\r\n        <div className=\"container\">\r\n            <br></br>\r\n            <br></br>\r\n            <h2>{skl.Branch}</h2>\r\n            <hr></hr>\r\n            <h3>{skl.Topic}</h3>\r\n            <hr></hr>\r\n            <div className=\"users\" style={{display:isuser?\"\":\"none\"}}>\r\n                <h2>users</h2>\r\n                    <div className=\"row\">\r\n                        <br></br>\r\n                        \r\n                        {users.map((val,key)=>{\r\n                             return (\r\n                                <div className=\"col-md-4\">\r\n                                  <Cards data={val} key={key} type=\"user\"/>\r\n                                  <br></br>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <hr></hr>\r\n                </div>\r\n                <div className=\"rscs\" style={{display:isrsc?\"\":\"none\"}}>\r\n                    <h2>Resources</h2>\r\n                    <div className=\"row\">\r\n                        <br></br>\r\n                        {resources.map((val,key)=>{\r\n                            return(\r\n                              <div className=\"col-md-4\">\r\n                                  <Cards data={val} key={key} type=\"resc\"/>\r\n                                  <br></br>\r\n                              </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <hr></hr>\r\n                </div>\r\n        </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Skills;","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Main\\Profile.js",["166","167","168","169","170","171"],"import {React,useEffect,useState} from \"react\"\r\nimport { Form,Button,Card } from \"react-bootstrap\"\r\nimport {Redirect,Link} from 'react-router-dom'\r\nimport MainNav from './MainNav'\r\nimport {getResc,getSkills, updateprofile,Removemyskills,Removeforskills,RemoveResource} from './apiMain'\r\nimport { getUser } from \"../Auth/apiAuth\"\r\nimport {getUserDetails,profile} from './apiMain'\r\n\r\n\r\nconst Profile = (props) =>{\r\n    const [login,setLogin] = useState(0);\r\n    const [data,setData] = useState({})\r\n    const [dis,setDis]=useState(true)\r\n    const [values, setValues] = useState({\r\n      name: \"\",\r\n      email: \"\",\r\n      github: \"\",\r\n      linkedin: \"\",\r\n      contact: \"\",\r\n    });\r\n    const [changed,setChanged]=useState(0);\r\n    const [have,setHave]=useState([]);\r\n    const [gain,setGain]=useState([]);\r\n    const [resc,setResc]=useState([]);\r\n\r\n    useEffect(async ()=>{\r\n        await getUser().then(async (data)=>{\r\n          let email=data.data.tokenuser.email\r\n          const resl=await profile({\"email\":email})\r\n          setData(resl[0].user)\r\n          setHave(resl[0].have)\r\n          setGain(resl[0].gain)\r\n          setResc(resl[0].resource)\r\n          values.name=resl[0].user.name\r\n          values.email=resl[0].user.email\r\n          values.github=(resl[0].user.github === undefined)?\"\":resl[0].user.github\r\n          values.contact=(resl[0].user.contact === undefined)?\"\":resl[0].user.contact\r\n          values.linkedin=(resl[0].user.linkedin === undefined)?\"\":resl[0].user.linkedin\r\n          setLogin(1)\r\n        })\r\n        .catch((err)=>{\r\n            setLogin(2)\r\n        })\r\n    },[changed])\r\n\r\n\r\n    \r\n    const handleChange = (event) => {\r\n      setValues({ ...values, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const handleSubmit = async (event)=>{\r\n        event.preventDefault();\r\n        await updateprofile(values).then((resl)=>{\r\n            setChanged(changed+1)\r\n            setDis(true)\r\n            console.log(resl)\r\n        })\r\n        .catch((err)=>{\r\n          console.log(err)\r\n        })\r\n    }\r\n\r\n    const handleEdit = (event)=>{\r\n        setDis(false)\r\n    }\r\n\r\n    const onHaveRemove = (event,val)=>{\r\n        let data={\r\n          branch:val.Branch,\r\n          skills:[val.Topic]\r\n        }\r\n        Removemyskills(data).then((resl)=>{\r\n          console.log(resl)\r\n          setChanged(changed+1)\r\n          setDis(true)\r\n        })\r\n        .catch((err)=>{\r\n          console.log(err)\r\n        })\r\n    }\r\n\r\n    const onGiveRemove= (event,val)=>{\r\n        let data={\r\n          branch:val.Branch,\r\n          skills:[val.Topic]\r\n        }\r\n        Removeforskills(data).then((resl)=>{\r\n          console.log(resl)\r\n          setChanged(changed+1)\r\n          setDis(true)\r\n        })\r\n        .catch((err)=>{\r\n          console.log(err)\r\n        })\r\n    }\r\n\r\n    const onRescRemove=(event,val)=>{\r\n        let data={\r\n          \"id\":val._id\r\n        }\r\n        RemoveResource(data).then((resl)=>{\r\n          console.log(resl)\r\n          setChanged(changed+1)\r\n          setDis(true)\r\n        })\r\n        .catch((err)=>{\r\n          console.log(err)\r\n        })\r\n    }\r\n\r\n    if(login === 0){\r\n        return (<h1>loading </h1>)\r\n    }\r\n    else if(login === 1){\r\n      \r\n      return (\r\n        <div>\r\n        <MainNav/>\r\n      <div className=\"container\">\r\n        <Button variant=\"success\" className=\"my-3\" onClick={(e)=>handleEdit(e)}>Edit</Button>\r\n        <Form className=\"my-2\" onSubmit={(e)=>handleSubmit(e)}>\r\n          <Form.Group controlId=\"formGroupName\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Enter your name\"  name=\"name\" value={values.name} onChange={(e)=>handleChange(e)} disabled={dis}/>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupEmail\" className=\"my-5\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" value={values.email} onChange={(e) => handleChange(e)} disabled=\"true\"/>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupgithub\" className=\"my-5\">\r\n            <Form.Label>GitHub Username</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Github username (optional)\" name=\"github\" value={values.github} onChange={(e) => handleChange(e)} disabled={dis}/>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGrouplinkedin\" className=\"my-5\">\r\n            <Form.Label>Linkedin Username</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Linkedin username (optional)\" name=\"linkedin\" value={values.linkedin} onChange={(e) => handleChange(e)} disabled={dis}/>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupcontact\" className=\"my-5\">\r\n            <Form.Label>Contact</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Contact Number\" name=\"contact\" value={values.contact} onChange={(e) => handleChange(e)} disabled={dis}/>\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\" className=\"my-3\" disabled={dis}>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n      <br></br>\r\n      <br></br>\r\n      <hr></hr>\r\n        <div className=\"container\">\r\n           <h4>skills you have</h4>\r\n           <hr></hr>\r\n            <div className=\"row\">\r\n                {have.map((val,key)=>{\r\n                  return (\r\n                    <div>\r\n                      <div className=\"col-md-4\">\r\n                          <Card style={{ width: '15rem' }}>\r\n                            <Card.Body>\r\n                              <Card.Title>{val.Branch}</Card.Title>\r\n                              <Card.Text>\r\n                                <strong>Topic:  </strong>{val.Topic}\r\n                              </Card.Text>\r\n                              <Link  className=\"btn btn-primary\" to={{pathname:\"/skill/\"+val._id}}>Explore</Link>\r\n                              <Button className=\"btn btn-danger ml-2\" onClick={(e)=>onHaveRemove(e,val)}>Delete</Button>\r\n                            </Card.Body>\r\n                          </Card>\r\n                          <br></br>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n            <br></br>\r\n            <br></br>\r\n            <h4>Skills you want to Gain</h4>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n              {gain.map((val,key)=>{\r\n                  return (\r\n                    <div>\r\n                      <div className=\"col-md-4\">\r\n                          <Card style={{ width: '15rem' }}>\r\n                            <Card.Body>\r\n                              <Card.Title>{val.Branch}</Card.Title>\r\n                              <Card.Text>\r\n                                <strong>Topic:  </strong>{val.Topic}\r\n                              </Card.Text>\r\n                              <Link  className=\"btn btn-primary\" to={{pathname:\"/skill/\"+val._id}}>Explore</Link>\r\n                              <Button className=\"btn btn-danger ml-2\" onClick={(e)=>onGiveRemove(e,val)}>Delete</Button>\r\n                            </Card.Body>\r\n                          </Card>\r\n                          <br></br>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n            <br></br>\r\n            <br></br>\r\n            <h4>Resources that you have created.</h4>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n                {resc.map((val,key)=>{\r\n                  return(\r\n                    <div>\r\n                      <div className=\"col-md-4\">\r\n                          <Card style={{ width: '15rem' }}>\r\n                            <Card.Body>\r\n                              <Card.Title>{val.title}</Card.Title>\r\n                              <Link className=\"btn btn-primary \" to={{pathname:\"/resource/\"+val._id}}>See More..</Link>\r\n                              <Button className=\"btn btn-danger ml-2\" onClick={(e)=>onRescRemove(e,val)}>Delete</Button>\r\n                            </Card.Body>\r\n                          </Card>\r\n                          <br></br>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n       return ( <Redirect to=\"/login\"></Redirect> )\r\n    }\r\n        \r\n}\r\n\r\nexport default Profile","C:\\Users\\Sanketh\\Desktop\\E-Ally\\frontend\\src\\Chat.js",["172","173","174","175"],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":28,"nodeType":"182","messageId":"183","endLine":1,"endColumn":34},{"ruleId":"180","severity":1,"message":"184","line":1,"column":36,"nodeType":"182","messageId":"183","endLine":1,"endColumn":44},{"ruleId":"180","severity":1,"message":"185","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":13},{"ruleId":"180","severity":1,"message":"185","line":6,"column":8,"nodeType":"182","messageId":"183","endLine":6,"endColumn":13},{"ruleId":"180","severity":1,"message":"186","line":2,"column":27,"nodeType":"182","messageId":"183","endLine":2,"endColumn":36},{"ruleId":"187","severity":1,"message":"188","line":34,"column":6,"nodeType":"189","endLine":34,"endColumn":13,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":53,"column":22,"nodeType":"193","messageId":"194","endLine":53,"endColumn":33},{"ruleId":"180","severity":1,"message":"195","line":102,"column":17,"nodeType":"182","messageId":"183","endLine":102,"endColumn":24},{"ruleId":"196","severity":1,"message":"197","line":119,"column":16,"nodeType":"198","endLine":119,"endColumn":20},{"ruleId":"196","severity":1,"message":"197","line":161,"column":33,"nodeType":"198","endLine":161,"endColumn":37},{"ruleId":"180","severity":1,"message":"199","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":14},{"ruleId":"180","severity":1,"message":"200","line":2,"column":16,"nodeType":"182","messageId":"183","endLine":2,"endColumn":22},{"ruleId":"187","severity":1,"message":"201","line":15,"column":5,"nodeType":"182","endLine":15,"endColumn":14,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":34,"column":25,"nodeType":"198","endLine":35,"endColumn":52},{"ruleId":"187","severity":1,"message":"188","line":34,"column":6,"nodeType":"189","endLine":34,"endColumn":13,"suggestions":"205"},{"ruleId":"191","severity":1,"message":"192","line":53,"column":22,"nodeType":"193","messageId":"194","endLine":53,"endColumn":33},{"ruleId":"180","severity":1,"message":"195","line":102,"column":17,"nodeType":"182","messageId":"183","endLine":102,"endColumn":24},{"ruleId":"196","severity":1,"message":"197","line":119,"column":16,"nodeType":"198","endLine":119,"endColumn":20},{"ruleId":"196","severity":1,"message":"197","line":161,"column":33,"nodeType":"198","endLine":161,"endColumn":37},{"ruleId":"180","severity":1,"message":"181","line":1,"column":38,"nodeType":"182","messageId":"183","endLine":1,"endColumn":44},{"ruleId":"180","severity":1,"message":"200","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":16},{"ruleId":"180","severity":1,"message":"199","line":2,"column":28,"nodeType":"182","messageId":"183","endLine":2,"endColumn":32},{"ruleId":"180","severity":1,"message":"206","line":6,"column":20,"nodeType":"182","messageId":"183","endLine":6,"endColumn":24},{"ruleId":"180","severity":1,"message":"207","line":8,"column":10,"nodeType":"182","messageId":"183","endLine":8,"endColumn":12},{"ruleId":"180","severity":1,"message":"208","line":18,"column":10,"nodeType":"182","messageId":"183","endLine":18,"endColumn":13},{"ruleId":"180","severity":1,"message":"209","line":18,"column":14,"nodeType":"182","messageId":"183","endLine":18,"endColumn":20},{"ruleId":"180","severity":1,"message":"210","line":19,"column":10,"nodeType":"182","messageId":"183","endLine":19,"endColumn":14},{"ruleId":"180","severity":1,"message":"211","line":19,"column":15,"nodeType":"182","messageId":"183","endLine":19,"endColumn":22},{"ruleId":"212","severity":1,"message":"213","line":23,"column":19,"nodeType":"214","messageId":"215","endLine":23,"endColumn":21},{"ruleId":"187","severity":1,"message":"216","line":44,"column":13,"nodeType":"217","endLine":61,"endColumn":4},{"ruleId":"187","severity":1,"message":"218","line":61,"column":5,"nodeType":"189","endLine":61,"endColumn":7,"suggestions":"219"},{"ruleId":"180","severity":1,"message":"220","line":2,"column":15,"nodeType":"182","messageId":"183","endLine":2,"endColumn":23},{"ruleId":"180","severity":1,"message":"200","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":16},{"ruleId":"180","severity":1,"message":"221","line":3,"column":18,"nodeType":"182","messageId":"183","endLine":3,"endColumn":21},{"ruleId":"180","severity":1,"message":"222","line":3,"column":23,"nodeType":"182","messageId":"183","endLine":3,"endColumn":29},{"ruleId":"180","severity":1,"message":"223","line":3,"column":31,"nodeType":"182","messageId":"183","endLine":3,"endColumn":39},{"ruleId":"180","severity":1,"message":"224","line":3,"column":40,"nodeType":"182","messageId":"183","endLine":3,"endColumn":51},{"ruleId":"187","severity":1,"message":"225","line":18,"column":3,"nodeType":"182","endLine":18,"endColumn":12,"suggestions":"226"},{"ruleId":"180","severity":1,"message":"227","line":13,"column":7,"nodeType":"182","messageId":"183","endLine":13,"endColumn":19},{"ruleId":"180","severity":1,"message":"228","line":15,"column":7,"nodeType":"182","messageId":"183","endLine":15,"endColumn":11},{"ruleId":"180","severity":1,"message":"229","line":20,"column":7,"nodeType":"182","messageId":"183","endLine":20,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":60,"column":19,"nodeType":"214","messageId":"215","endLine":60,"endColumn":21},{"ruleId":"212","severity":1,"message":"213","line":112,"column":17,"nodeType":"214","messageId":"215","endLine":112,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":123,"column":17,"nodeType":"214","messageId":"215","endLine":123,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":137,"column":17,"nodeType":"214","messageId":"215","endLine":137,"endColumn":19},{"ruleId":"180","severity":1,"message":"230","line":2,"column":52,"nodeType":"182","messageId":"183","endLine":2,"endColumn":61},{"ruleId":"180","severity":1,"message":"231","line":12,"column":12,"nodeType":"182","messageId":"183","endLine":12,"endColumn":15},{"ruleId":"187","severity":1,"message":"188","line":39,"column":6,"nodeType":"189","endLine":39,"endColumn":13,"suggestions":"232"},{"ruleId":"191","severity":1,"message":"192","line":58,"column":22,"nodeType":"193","messageId":"194","endLine":58,"endColumn":33},{"ruleId":"196","severity":1,"message":"197","line":137,"column":16,"nodeType":"198","endLine":137,"endColumn":20},{"ruleId":"196","severity":1,"message":"197","line":179,"column":33,"nodeType":"198","endLine":179,"endColumn":37},{"ruleId":"180","severity":1,"message":"233","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":15},{"ruleId":"180","severity":1,"message":"200","line":5,"column":10,"nodeType":"182","messageId":"183","endLine":5,"endColumn":16},{"ruleId":"180","severity":1,"message":"221","line":5,"column":18,"nodeType":"182","messageId":"183","endLine":5,"endColumn":21},{"ruleId":"180","severity":1,"message":"222","line":5,"column":23,"nodeType":"182","messageId":"183","endLine":5,"endColumn":29},{"ruleId":"180","severity":1,"message":"223","line":5,"column":31,"nodeType":"182","messageId":"183","endLine":5,"endColumn":39},{"ruleId":"234","severity":1,"message":"235","line":29,"column":17,"nodeType":"182","messageId":"236","endLine":29,"endColumn":22},{"ruleId":"234","severity":1,"message":"235","line":42,"column":21,"nodeType":"182","messageId":"236","endLine":42,"endColumn":26},{"ruleId":"187","severity":1,"message":"237","line":70,"column":7,"nodeType":"189","endLine":70,"endColumn":14,"suggestions":"238"},{"ruleId":"180","severity":1,"message":"239","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":14},{"ruleId":"187","severity":1,"message":"216","line":14,"column":11,"nodeType":"217","endLine":50,"endColumn":2},{"ruleId":"187","severity":1,"message":"188","line":50,"column":3,"nodeType":"189","endLine":50,"endColumn":5,"suggestions":"240"},{"ruleId":"187","severity":1,"message":"216","line":14,"column":15,"nodeType":"217","endLine":43,"endColumn":6},{"ruleId":"187","severity":1,"message":"188","line":43,"column":7,"nodeType":"189","endLine":43,"endColumn":9,"suggestions":"241"},{"ruleId":"180","severity":1,"message":"242","line":5,"column":9,"nodeType":"182","messageId":"183","endLine":5,"endColumn":16},{"ruleId":"180","severity":1,"message":"243","line":5,"column":17,"nodeType":"182","messageId":"183","endLine":5,"endColumn":26},{"ruleId":"180","severity":1,"message":"244","line":7,"column":9,"nodeType":"182","messageId":"183","endLine":7,"endColumn":23},{"ruleId":"180","severity":1,"message":"228","line":12,"column":12,"nodeType":"182","messageId":"183","endLine":12,"endColumn":16},{"ruleId":"187","severity":1,"message":"216","line":26,"column":15,"nodeType":"217","endLine":44,"endColumn":6},{"ruleId":"187","severity":1,"message":"245","line":44,"column":7,"nodeType":"189","endLine":44,"endColumn":16,"suggestions":"246"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":34,"nodeType":"182","messageId":"183","endLine":1,"endColumn":40},{"ruleId":"180","severity":1,"message":"247","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":14},{"ruleId":"187","severity":1,"message":"216","line":16,"column":15,"nodeType":"217","endLine":41,"endColumn":8},{"ruleId":"187","severity":1,"message":"248","line":41,"column":9,"nodeType":"189","endLine":41,"endColumn":11,"suggestions":"249"},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.pathname'. Either include it or remove the dependency array.","ArrayExpression",["252"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'message' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Card' is defined but never used.","'Button' is defined but never used.","React Hook useEffect contains a call to 'setOpt'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.location.onprops.option] as a second argument to the useEffect Hook.",["253"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["254"],"'Link' is defined but never used.","'io' is defined but never used.","'soc' is assigned a value but never used.","'setSoc' is assigned a value but never used.","'chat' is assigned a value but never used.","'setChat' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["255"],"'Redirect' is defined but never used.","'Nav' is defined but never used.","'Navbar' is defined but never used.","'Carousel' is defined but never used.","'NavDropdown' is defined but never used.","React Hook useEffect contains a call to 'setMsg'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["256"],"'handleSkills' is assigned a value but never used.","'data' is assigned a value but never used.","'handleResc' is assigned a value but never used.","'FormGroup' is defined but never used.","'sub' is assigned a value but never used.",["257"],"'MainNav' is defined but never used.","no-redeclare","'query' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'props.location.onprops.query', 'rels', and 'searchexp'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setUsers' needs the current value of 'rels'.",["258"],"'Form' is defined but never used.",["259"],["260"],"'getResc' is defined but never used.","'getSkills' is defined but never used.","'getUserDetails' is defined but never used.","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array.",["261"],"'styles' is defined but never used.","React Hook useEffect has missing dependencies: 'chat', 'props.location.pathname', and 'socket'. Either include them or remove the dependency array. If 'setRec' needs the current value of 'props.location.pathname', you can also switch to useReducer instead of useState and read 'props.location.pathname' in the reducer.",["262"],"no-global-assign","no-unsafe-negation",{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"263","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"263","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"275","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},"Update the dependencies array to be: [count, props.location.pathname]",{"range":"282","text":"283"},"Add dependencies array: [props.location.onprops.option]",{"range":"284","text":"285"},{"range":"286","text":"283"},"Update the dependencies array to be: [socket]",{"range":"287","text":"288"},"Add dependencies array: []",{"range":"289","text":"290"},{"range":"291","text":"283"},"Update the dependencies array to be: [count, props.location.onprops.query, rels, searchexp]",{"range":"292","text":"293"},"Update the dependencies array to be: [props.location.pathname]",{"range":"294","text":"295"},{"range":"296","text":"295"},"Update the dependencies array to be: [changed, values]",{"range":"297","text":"298"},"Update the dependencies array to be: [chat, props.location.pathname, socket]",{"range":"299","text":"300"},[1127,1134],"[count, props.location.pathname]",[1171,1171],", [props.location.onprops.option]",[1081,1088],[1504,1506],"[socket]",[686,686],", []",[1226,1233],[2156,2163],"[count, props.location.onprops.query, rels, searchexp]",[1203,1205],"[props.location.pathname]",[1237,1239],[1608,1617],"[changed, values]",[1137,1139],"[chat, props.location.pathname, socket]"]